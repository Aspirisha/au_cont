#!/usr/bin/python

import signal
import socket
import os
import sys
import errno
from subprocess import call

def main():
    if len(sys.argv) < 2:
        print("Expect container ID as first argument")
        return

    pid = sys.argv[1]
    sig = int(sys.argv[2]) if len(sys.argv) > 2 else signal.SIGTERM

    try:
        os.kill(int(pid), sig)
    except OSError as e:
        if errno.EPERM == e.errno:
            print("Permission denied killing process. Maybe try with [sudo]?")
            return
    except Exception as e:
        print(e)
        return

    edsIP = "localhost"
    edsPORT = 8007
    MESSAGE = "stop {}".format(pid) 
    MAX_DATA_SIZE = 4096

    srvsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    srvsock.settimeout(3) # 3 second timeout on commands
    srvsock.connect((edsIP, edsPORT))
    srvsock.sendall(MESSAGE)

    response = srvsock.recv(MAX_DATA_SIZE) 
    srvsock.close()

    if response != "OK":
        print(response)
    else:
        if os.path.exists("/sys/fs/cgroup/cpu/aucont-{}".format(pid)):
            call(["cgdelete", "cpu:aucont-{}".format(pid)])
        # delete net ns if needed
        # sudo ip netns delete aucontnet-3
        # sudo ip link delete veth0-aucont-3

if __name__ == '__main__':
    main()